spring:
  profiles:
    active: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/moturial_payment}
    username: ${DATABASE_USERNAME:moturial_user}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_POOL_MIN_IDLE:5}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      leak-detection-threshold: ${DB_LEAK_DETECTION:60000}
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
    baseline-version: 1
    baseline-description: "Initial baseline"
  
  h2:
    console:
      enabled: false

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
  http2:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.moturial.payment: INFO
    com.stripe: WARN
    org.springframework.security: WARN
    org.flywaydb: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:/var/log/moturial/payment-service.log}

moturial:
  security:
    api:
      key: ${API_KEY}
  jwt:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION:3600000}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

stripe:
  secret-key: ${STRIPE_SECRET_KEY}
  publishable-key: ${STRIPE_PUBLISHABLE_KEY}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET}
  currency: BRL
  payment-methods:
    card: true
    pix: true
    boleto: true

payment:
  validation:
    card-number-pattern: "^[0-9]{13,19}$"
    cvv-pattern: "^[0-9]{3,4}$"
    expiry-pattern: "^(0[1-9]|1[0-2])/([0-9]{2})$"
  limits:
    max-amount: ${MAX_PAYMENT_AMOUNT:1000000}
    min-amount: ${MIN_PAYMENT_AMOUNT:100}
    max-installments: ${MAX_INSTALLMENTS:12}
  retry:
    max-attempts: ${PAYMENT_RETRY_MAX_ATTEMPTS:3}
    backoff-delay: ${PAYMENT_RETRY_BACKOFF_DELAY:2000}
